import { Composer } from 'grammy';

import { Schedules } from '#root/db/models/Schedules.js';
import { daysList, id2dayName } from '#bot/helpers/days-list.js';

import { setScheduleKeyboard } from './keyboards.js';
import { setScheduleConversation } from './conversations.js';

export const feature = new Composer().chatType('private');

feature.hears(/üìù –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ|\/setschedule/gi, async (ctx) => {
    await ctx.reply(
        '[üìì] –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.',
        {
            reply_markup: setScheduleKeyboard,
        }
    );
});

feature.use(setScheduleConversation);

feature.hears(
    new RegExp(daysList.join('|'), 'gi'),
    async (ctx) => await ctx.conversation.enter('setScheduleConversation')
);

feature.hears(/üìö –í—Å—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ|\/getschedule/, async (ctx) => {
    const schedules = await Schedules.find({ userId: ctx.from.id });

    await ctx.reply(tableSchedule(schedules));
});

/**
 * –Ø –ù–ï –ï–ë–£ –ö–ê–ö –≠–¢–û –†–ê–ë–û–¢–ê–ï–¢
 * –ù–û –ü–û–ú–ù–Æ –ß–¢–û –†–ê–ë–û–¢–ê–ï–¢ –ß–ï–†–ï–ó –ñ–û–ü–£
 * –ù–ê–î–û –ü–û–ß–ò–ù–ò–¢–¨
 * TO DO
 */
function tableSchedule(schedules) {
    const delta = 18;
    let text = '<code>';

    for (let schedule of schedules) {
        text += '‚îå' + '‚îÄ'.repeat(delta - 2) + '‚îê' + '\n';
        text +=
            '|' +
            id2dayName(schedule.dayId) +
            ' '.repeat(delta - id2dayName(schedule.dayId).length - 2) +
            '|' +
            '\n';
        text += '‚îú' + '‚îÄ'.repeat(delta - 2) + '‚î§' + '\n';

        for (let lesson of schedule.lessons) {
            text +=
                '‚îÇ' +
                lesson +
                ' '.repeat(delta - lesson.length - 2) +
                '|' +
                '\n';
        }

        text += '‚îî' + '‚îÄ'.repeat(delta - 2) + '‚îò' + '\n';
    }

    return text + '</code>';
}
